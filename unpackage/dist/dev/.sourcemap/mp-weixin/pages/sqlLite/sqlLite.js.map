{"version":3,"sources":["uni-app:///main.js","webpack:///D:/project/vue/展汇通PDA（手机版）/pages/sqlLite/sqlLite.vue?ab6d","webpack:///D:/project/vue/展汇通PDA（手机版）/pages/sqlLite/sqlLite.vue?a254","webpack:///D:/project/vue/展汇通PDA（手机版）/pages/sqlLite/sqlLite.vue?d70e","webpack:///D:/project/vue/展汇通PDA（手机版）/pages/sqlLite/sqlLite.vue?95de","uni-app:///pages/sqlLite/sqlLite.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","listData","onLoad","methods","openSQL","console","DB","then","catch","closeSQL","createTable","insertTableData","name","content","arr","selectTableData","updateTableData","deleteTableData","showToast","uni","icon","title","mask","formatDate","now","year","month","date","hour","minute","second"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,gBAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAoH;AACpH;AAC2D;AACL;;;AAGtD;AAC4M;AAC5M,gBAAgB,mNAAU;AAC1B,EAAE,6EAAM;AACR,EAAE,kFAAM;AACR,EAAE,2FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,sFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAoyB,CAAgB,+yBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;ACoBxzB;;;;;;;;;;;;;;;;;;;;eACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;EACA;EAEAC;IACA;IACAC;MACA;MACA;MACAC;MACA;QACAC,6BACAC;UACAF;QACA,GACAG;UACAH;QACA;MACA;IACA;IAEA;IACAI;MACA;MACA;MACA;QACAH,8BACAC;UACAF;QACA,GACAG;UACAH;QACA;MACA;IACA;IAEA;IACAK;MACA;MACA;QACA;QACA,UACA;QACA;QACAJ,yCACAC;UACAF;QACA,GACAG;UACAH;QACA;MACA;QACAA;MACA;IACA;IACA;IACAM;MAAA;MACA;MACA;QACA;UACAC;UACAC;QACA,GACA;UACAD;UACAC;QACA,EACA;QACAC;UACA;UACA;UACA;UACA;UACAR,wDACAC;YACAF;YACA;UACA,GACAG;YACAH;UACA;QACA;MACA;QACA;MACA;IACA;IACA;IACAU;MAAA;MACA;MACA;QACA;QACAT,wCACAC;UACAF;UACA;QACA,GACAG;UACAH;QACA;MACA;QACA;MACA;IACA;IACA;IACAW;MAAA;MACA;MACA;QACA;QACA;QACA;QACAV,4DACAC;UACA;UACA;QACA,GACAC;UACAH;QACA;MACA;QACA;MACA;IACA;IAEA;IACAY;MAAA;MACA;MACA;QACA;QACAX,sDACAC;UACA;UACA;QACA,GACAC;UACAH;QACA;MACA;QACA;MACA;IACA;IAMA;IACAa;MACAC;QACAC;QACAC;QACAC;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA,YACAC,0BACA,6BACAA;MACA;MACA;MACA,aACAA;MACA,aACAA;MACA,OACAC,OACA,MACAC,QACA,MACAC,OACA,MACAC,OACA,MACAC,SACA,MACAC;IAEA;EACA;AACA;AAAA,2B","file":"pages/sqlLite/sqlLite.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/sqlLite/sqlLite.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./sqlLite.vue?vue&type=template&id=36876440&\"\nvar renderjs\nimport script from \"./sqlLite.vue?vue&type=script&lang=js&\"\nexport * from \"./sqlLite.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/sqlLite/sqlLite.vue\"\nexport default component.exports","export * from \"-!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./sqlLite.vue?vue&type=template&id=36876440&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./sqlLite.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!E:\\\\yangfei\\\\ide\\\\HBuilderX.3.5.2.2-alpha\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./sqlLite.vue?vue&type=script&lang=js&\"","<template>\n\t<view>\n\t\t<view class=\"uni-divider uni-divider__content\">Demo</view>\n\t\t<button @click=\"openSQL\">打开数据库</button>\n\t\t<button @click=\"createTable\">创建表</button>\n\t\t<button @click=\"insertTableData\">新增表数据</button>\n\t\t<button @click=\"selectTableData\">查询表数据</button>\n\t\t<button @click=\"updateTableData\">修改表数据</button>\n\t\t<button @click=\"deleteTableData\">按条件删除表数据</button>\n\t\t<button @click=\"closeSQL\">关闭数据库</button>\n \n\t\t<view class=\"uni-divider__content\" v-for=\"(item,index) in listData\" :key='index'>\n\t\t\t<view>名字:{{item.name}}</view>\n\t\t\t<view>内容:{{item.content}}</view>\n\t\t\t<view>时间:{{item.time}}</view>\n\t\t</view>\n\t</view>\n</template>\n \n<script>  \n\timport DB from '@/common/sqlite.js'\n\texport default {  \n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tlistData: []\n\t\t\t};\n\t\t},\n\t\tonLoad() {\n\t\t\tthis.openSQL();\n\t\t},\n \n\t\tmethods: {\n\t\t\t// 打开数据库\n\t\t\topenSQL() {\n\t\t\t\t// 这个是查询有没有打开数据库\n\t\t\t\tlet open = DB.isOpen();\n\t\t\t\tconsole.log(\"数据库状态\", open ? \"开启\" : \"关闭\");\n\t\t\t\tif (!open) {\n\t\t\t\t\tDB.openSqlite()\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconsole.log(\"数据库已打开\");\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.log(\"数据库开启失败\");\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n \n\t\t\t// 关闭数据库\n\t\t\tcloseSQL() {\n\t\t\t\t// 这个是查询有没有打开数据库\n\t\t\t\tlet open = DB.isOpen();\n\t\t\t\tif (open) {\n\t\t\t\t\tDB.closeSqlite()\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconsole.log(\"数据库已关闭\");\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.log(\"数据库关闭失败\");\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n \n\t\t\t// 创建表\n\t\t\tcreateTable() {\n\t\t\t\tlet open = DB.isOpen();\n\t\t\t\tif (open) {\n\t\t\t\t\tthis.openSQL();\n\t\t\t\t\tlet sql =\n\t\t\t\t\t\t'\"id\" INTEGER PRIMARY KEY AUTOINCREMENT,\"name\" text,\"content\" text,\"time\" text';\n\t\t\t\t\t// 创建表 DB.createTable(表名, 表的列)\n\t\t\t\t\tDB.createTable(\"chat\", sql)\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconsole.log(\"创建chat表成功\");\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.log(\"创建表失败\");\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"数据库未打开\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 新增表数据\n\t\t\tinsertTableData() {\n\t\t\t\tlet open = DB.isOpen();\n\t\t\t\tif (open) {\n\t\t\t\t\tlet arr = [{\n\t\t\t\t\t\t\tname: '小明',\n\t\t\t\t\t\t\tcontent: \"你好呀\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: '小红',\n\t\t\t\t\t\t\tcontent: \"HI\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t\tarr.map(item => {\n\t\t\t\t\t\tlet time = this.formatDate(new Date().getTime());\n\t\t\t\t\t\tlet sql = `'${item.name}','${item.content}','${time}'`;\n\t\t\t\t\t\tlet condition = \"'name','content','time'\";\n\t\t\t\t\t\t// 新增 DB.insertTableData(表名, 对应表头列的数据)\n\t\t\t\t\t\tDB.insertTableData(\"chat\", sql, condition)\n\t\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\t\tconsole.log(\"新增数据成功\");\n\t\t\t\t\t\t\t\tthis.selectTableData();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\tconsole.log(\"失败\", error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthis.showToast(\"数据库未打开\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 查询表数据\n\t\t\tselectTableData() {\n\t\t\t\tlet open = DB.isOpen();\n\t\t\t\tif (open) {\n\t\t\t\t\t// 查询表 DB.selectTableData(表名,查询条件列名,查询条件列值)\n\t\t\t\t\tDB.selectTableData(\"chat\")\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconsole.log(\"contact表数据\", res);\n\t\t\t\t\t\t\tthis.listData = res;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.log(\"查询失败\", error);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.showToast(\"数据库未打开\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t// 修改表数据\n\t\t\tupdateTableData() {\n\t\t\t\tlet open = DB.isOpen();\n\t\t\t\tif (open) {\n\t\t\t\t\tlet time = this.formatDate(new Date().getTime());\n\t\t\t\t\tlet data = `content = '我被修改了',time = '${time}'`;\n\t\t\t\t\t// 修改表数据 DB.updateTableData(表名, 要修改的列名=修改后列值, 修改条件的列名, 修改条件的列值)\n\t\t\t\t\tDB.updateTableData(\"chat\", data, \"name\", \"小明\")\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tthis.showToast(\"更新chat表成功\");\n\t\t\t\t\t\t\tthis.selectTableData();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.log(\"修改失败\", error);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.showToast(\"数据库未打开\");\n\t\t\t\t}\n\t\t\t},\n \n\t\t\t// 删除表数据\n\t\t\tdeleteTableData() {\n\t\t\t\tlet open = DB.isOpen();\n\t\t\t\tif (open) {\n\t\t\t\t\t// 删除表 DB.deleteTableData(表名,查询条件列名,查询条件列值)\n\t\t\t\t\tDB.deleteTableData(\"chat\", \"name\", \"小红\")\n\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tthis.showToast(\"删除表数据成功\");\n\t\t\t\t\t\t\tthis.selectTableData();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.log(\"删除失败\", error);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.showToast(\"数据库未打开\");\n\t\t\t\t}\n\t\t\t},\n \n \n \n \n \n\t\t\t// 提示框\n\t\t\tshowToast: function(str) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ticon: \"none\",\n\t\t\t\t\ttitle: str,\n\t\t\t\t\tmask: true\n\t\t\t\t});\n\t\t\t},\n \n\t\t\t// 时间戳转年月日\n\t\t\tformatDate(data) {\n\t\t\t\tlet now = new Date(data);\n\t\t\t\tvar year = now.getFullYear(); //取得4位数的年份\n\t\t\t\tvar month =\n\t\t\t\t\tnow.getMonth() + 1 < 10 ?\n\t\t\t\t\t\"0\" + (now.getMonth() + 1) :\n\t\t\t\t\tnow.getMonth() + 1;\n\t\t\t\tvar date = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n\t\t\t\tvar hour = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n\t\t\t\tvar minute =\n\t\t\t\t\tnow.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n\t\t\t\tvar second =\n\t\t\t\t\tnow.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\t\t\t\treturn (\n\t\t\t\t\tyear +\n\t\t\t\t\t\"-\" +\n\t\t\t\t\tmonth +\n\t\t\t\t\t\"-\" +\n\t\t\t\t\tdate +\n\t\t\t\t\t\" \" +\n\t\t\t\t\thour +\n\t\t\t\t\t\":\" +\n\t\t\t\t\tminute +\n\t\t\t\t\t\":\" +\n\t\t\t\t\tsecond\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n</script>\n<style>\n \n</style>"],"sourceRoot":""}